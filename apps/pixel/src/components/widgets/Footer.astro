---
import { Icon } from 'astro-icon/components';
import { SITE } from 'astrowind:config';
import { getHomePermalink } from '~/utils/permalinks';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface Links {
  title?: string;
  links: Array<Link>;
}

export interface Props {
  links: Array<Links>;
  secondaryLinks: Array<Link>;
  socialLinks: Array<Link>;
  footer?: string;
  theme?: string;
}

const {
  socialLinks = [],
  secondaryLinks = [],
  links = [],
  footer = await Astro.slots.render('footer-node'),
  theme = 'light',
} = Astro.props;
---

<footer class:list={[{ dark: theme === 'dark' }, 'relative border-t border-gray-200 dark:border-slate-800 not-prose']}>
  <div class="dark:bg-dark absolute inset-0 pointer-events-none" aria-hidden="true"></div>
  <div class="relative max-w-7xl mx-auto px-4 sm:px-6 dark:text-slate-300">
    <div class="flex flex-col gap-4 gap-y-8 sm:gap-8 py-8 md:py-12">
      <div class="col-span-12 lg:col-span-4">
        <div class="mb-2">
          <a class="inline-block font-bold text-xl" href={getHomePermalink()}>{SITE?.name}</a>
        </div>
        <div class="text-sm text-muted flex gap-1">
          {
            secondaryLinks.map(({ text, href }, index) => (
              <>
                {index !== 0 ? ' Â· ' : ''}
                <a
                  class="text-muted hover:text-gray-700 dark:text-gray-400 hover:underline transition duration-150 ease-in-out"
                  href={href}
                  set:html={text}
                />
              </>
            ))
          }
        </div>
      </div>
      <div class="flex flex-row flex-1 gap-x-16 gap-y-4 flex-wrap">
        {
          links.map(({ title, links }) => (
            <div class="flex flex-col gap-1 w-fit">
              <div class="dark:text-gray-300 font-medium mb-2">{title}</div>
              {links && Array.isArray(links) && links.length > 0 && (
                <ul class="text-sm">
                  {links.map(({ text, href, ariaLabel }) => (
                    <li class="mb-2">
                      <a
                        class="text-muted hover:text-gray-700 hover:underline dark:text-gray-400 transition duration-150 ease-in-out"
                        href={href}
                        aria-label={ariaLabel}
                      >
                        <Fragment set:html={text} />
                      </a>
                    </li>
                  ))}
                </ul>
              )}
            </div>
          ))
        }
      </div>
    </div>
  </div>

  <div class="flex flex-col md:flex-row md:justify-between py-6 md:py-8">
    <div class="text-sm mr-4 dark:text-muted">
      {footer && <Fragment set:html={footer} />}
    </div>

    {
      !!socialLinks?.length && (
        <ul class="flex mb-4 md:order-1 -ml-2 md:ml-4 md:mb-0 rtl:ml-0 rtl:-mr-2 rtl:md:ml-0 rtl:md:mr-4">
          {socialLinks.map(({ ariaLabel, href, text, icon }) => (
            <li>
              <a
                class="text-muted dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5 inline-flex items-center"
                aria-label={ariaLabel}
                href={href}
              >
                {icon && <Icon name={icon} class="w-5 h-5" />}
                {text && <Fragment set:html={text} />}
              </a>
            </li>
          ))}
        </ul>
      )
    }
  </div>
</footer>
